config:
  target: http://localhost:3030
  phases:
    - duration: 300     # Duration of phase in sec
      arrivalRate: 5    # Number of new users per second
      maxVusers: 500    # Maxmium of concurrent users at any time
  processor: processor.js
  engines:
    socketio-v3: {}
  payload:
    # List of users to randomly pick from
    - path: ../payload/users.csv
      fields:
      - username
      - code
    # List of talks to randomly pick from
    - path: ../payload/talks.csv
      fields:
      - randomTalkId
    # Use first talk in list as current talk
    - path: ../payload/talks.csv
      fields:
      - currentTalkId
      order: sequence
    # List of chat messages to randomly pick from
    - path: ../payload/messages.csv
      fields:
      - message1
      delimiter: "|"
    - path: ../payload/messages.csv
      fields:
      - message2
      delimiter: "|"
    - path: ../payload/messages.csv
      fields:
      - message3
      delimiter: "|"
    - path: ../payload/messages.csv
      fields:
      - message4
      delimiter: "|"
    - path: ../payload/messages.csv
      fields:
      - message5
      delimiter: "|"
    - path: ../payload/messages.csv
      fields:
      - message6
      delimiter: "|"
    - path: ../payload/messages.csv
      fields:
      - message7
      delimiter: "|"
    # List of ratings to randomly pick from
    - path: ../payload/ratings.csv
      fields:
      - rating1
    - path: ../payload/ratings.csv
      fields:
      - rating2

scenarios:
  - name: Discuss, Q&A and Rate
    engine: socketio-v3
    flow:
      - connect:
          auth:
            code: "{{code}}"
            username: "{{username}}"
      - think: 1
      - emit: ["roomEnter", "{{currentTalkId}}"]
      - think: 1
      - function: generateUUID
      - emit: ["message", {id: "{{uuid}}", talkId: "{{currentTalkId}}", text: "{{message1}}"}]
        acknowledge:
          match:
            args: true
      - think: 1
      - function: generateUUID
      - emit: ["qaEntry", {id: "{{uuid}}", talkId: "{{currentTalkId}}", text: "{{message2}}", anonymous: false}]
        acknowledge:
          match:
            args: true
      - think: 1
      - emit: ["qaEntryLike", {id: "{{uuid}}"}]
        acknowledge:
          match:
            args: true
      - think: 1
      - function: generateUUID
      - emit: ["message", {id: "{{uuid}}", talkId: "{{currentTalkId}}", text: "{{message3}}"}]
        acknowledge:
          match:
            args: true
      - think: 2
      - function: generateUUID
      - emit: ["message", {id: "{{uuid}}", talkId: "{{currentTalkId}}", text: "{{message4}}"}]
        acknowledge:
          match:
            args: true
      - think: 1
      - emit: ["talkRating", {talkId: "{{currentTalkId}}", rating: "{{rating1}}", comment: "{{message5}}"}]
        acknowledge:
          match:
            args: true
      - think: 1
      - emit: ["roomLeave", "{{currentTalkId}}"]
      - think: 1
      - emit: ["roomEnter", "{{randomTalkId}}"]
      - think: 1
      - function: generateUUID
      - emit: ["message", {id: "{{uuid}}", talkId: "{{randomTalkId}}", text: "{{message6}}"}]
        acknowledge:
          match:
            args: true
      - think: 1
      - emit: ["talkRating", {talkId: "{{randomTalkId}}", rating: "{{rating2}}", comment: "{{message7}}"}]
        acknowledge:
          match:
            args: true
      - think: 1
      - emit: ["roomLeave", "{{randomTalkId}}"]
